<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<display-name>JavaServerFaces</display-name>

	<!-- Change to "Production" when you are ready to deploy -->
	<context-param>
		<param-name>javax.faces.PROJECT_STAGE</param-name>
		<param-value>Development</param-value>
	</context-param>

	<!-- Welcome page -->
	<welcome-file-list>
		<welcome-file>faces/hello.xhtml</welcome-file>
	</welcome-file-list>

	<filter>
  		<filter-name>HttpHeaderSecurityFilter</filter-name>
  		<filter-class>rmontag.jsfexample.common.HttpHeaderSecurityFilter</filter-class>
   		<!-- Should the anti click-jacking header (X-Frame-Options) be set on the response. -->
    	<init-param>
      		<param-name>antiClickJackingEnabled</param-name>
      		<param-value>true</param-value>
    	</init-param>
    	<init-param>
      		<param-name>antiClickJackingOption</param-name>
      		<param-value>SAMEORIGIN</param-value>
    	</init-param>
   		<!--  Should the header that enables the browser's cross-site scripting filter protection (X-XSS-Protection: 1; mode=block) be set on every response. --> 
    	<init-param>
      		<param-name>xssProtectionEnabled</param-name>
      		<param-value>true</param-value>
    	</init-param>
		<!-- Should the header that blocks content type sniffing (X-Content-Type-Options) be set on every response (nosniff).  -->
    	<init-param>
      		<param-name>blockContentTypeSniffingEnabled</param-name>
      		<param-value>true</param-value>
    	</init-param>
	</filter>

	<filter>
		<filter-name>ContentSecurityPolicyFilter</filter-name>
		<filter-class>rmontag.jsfexample.common.ContentSecurityPolicyFilter</filter-class>
		<init-param>
			<param-name>contentSecurityPolicyEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>contentSecurityPolicy</param-name>
			<param-value>frame-ancestors 'self' *.com; default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; frame-src *; style-src 'self' 'unsafe-inline'; img-src 'self' data:;</param-value>
		</init-param>
		<init-param>
			<param-name>contentSecurityPolicyReportOnlyEnabled</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>contentSecurityPolicyReportOnly</param-name>
			<param-value>frame-ancestors 'self' *.com; default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; frame-src *; style-src 'self' 'unsafe-inline'; img-src 'self' data:;</param-value>
		</init-param>
		<init-param>
			<param-name>headerXcontentSecurityPolicyEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>headerXwebkitCSPEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<!-- JSF mapping -->
	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<filter-mapping>
  		<filter-name>HttpHeaderSecurityFilter</filter-name>
  		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>ContentSecurityPolicyFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Map these files with JSF -->
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>/faces/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.jsf</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.faces</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.xhtml</url-pattern>
	</servlet-mapping>

<!-- WELD setup, is this still required for Tomcat7? Seems not... 
	<listener>
		<listener-class>org.jboss.weld.environment.servlet.Listener</listener-class>
	</listener>
	<resource-env-ref>
		<description>Object factory for the CDI Bean Manager</description>
		<resource-env-ref-name>BeanManager</resource-env-ref-name>
		<resource-env-ref-type>javax.enterprise.inject.spi.BeanManager</resource-env-ref-type>
	</resource-env-ref>
 -->


</web-app>
